// Code generated by protoc-gen-go. DO NOT EDIT.
// source: weather.proto

package weather

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WeatherRequest struct {
	Time                 int64    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Units                string   `protobuf:"bytes,3,opt,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeatherRequest) Reset()         { *m = WeatherRequest{} }
func (m *WeatherRequest) String() string { return proto.CompactTextString(m) }
func (*WeatherRequest) ProtoMessage()    {}
func (*WeatherRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_f08019a31f90f2e0, []int{0}
}
func (m *WeatherRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeatherRequest.Unmarshal(m, b)
}
func (m *WeatherRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeatherRequest.Marshal(b, m, deterministic)
}
func (dst *WeatherRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeatherRequest.Merge(dst, src)
}
func (m *WeatherRequest) XXX_Size() int {
	return xxx_messageInfo_WeatherRequest.Size(m)
}
func (m *WeatherRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WeatherRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WeatherRequest proto.InternalMessageInfo

func (m *WeatherRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *WeatherRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *WeatherRequest) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

type WeatherReply struct {
	Location             string     `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Latitude             float64    `protobuf:"fixed64,2,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude            float64    `protobuf:"fixed64,3,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Currently            *Currently `protobuf:"bytes,4,opt,name=currently,proto3" json:"currently,omitempty"`
	Forecast             *Forecast  `protobuf:"bytes,5,opt,name=forecast,proto3" json:"forecast,omitempty"`
	Alerts               []*Alert   `protobuf:"bytes,6,rep,name=alerts,proto3" json:"alerts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WeatherReply) Reset()         { *m = WeatherReply{} }
func (m *WeatherReply) String() string { return proto.CompactTextString(m) }
func (*WeatherReply) ProtoMessage()    {}
func (*WeatherReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_f08019a31f90f2e0, []int{1}
}
func (m *WeatherReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeatherReply.Unmarshal(m, b)
}
func (m *WeatherReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeatherReply.Marshal(b, m, deterministic)
}
func (dst *WeatherReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeatherReply.Merge(dst, src)
}
func (m *WeatherReply) XXX_Size() int {
	return xxx_messageInfo_WeatherReply.Size(m)
}
func (m *WeatherReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WeatherReply.DiscardUnknown(m)
}

var xxx_messageInfo_WeatherReply proto.InternalMessageInfo

func (m *WeatherReply) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *WeatherReply) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *WeatherReply) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *WeatherReply) GetCurrently() *Currently {
	if m != nil {
		return m.Currently
	}
	return nil
}

func (m *WeatherReply) GetForecast() *Forecast {
	if m != nil {
		return m.Forecast
	}
	return nil
}

func (m *WeatherReply) GetAlerts() []*Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

type Currently struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Summary              string   `protobuf:"bytes,2,opt,name=Summary,proto3" json:"Summary,omitempty"`
	Data                 *Data    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Currently) Reset()         { *m = Currently{} }
func (m *Currently) String() string { return proto.CompactTextString(m) }
func (*Currently) ProtoMessage()    {}
func (*Currently) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_f08019a31f90f2e0, []int{2}
}
func (m *Currently) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currently.Unmarshal(m, b)
}
func (m *Currently) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currently.Marshal(b, m, deterministic)
}
func (dst *Currently) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currently.Merge(dst, src)
}
func (m *Currently) XXX_Size() int {
	return xxx_messageInfo_Currently.Size(m)
}
func (m *Currently) XXX_DiscardUnknown() {
	xxx_messageInfo_Currently.DiscardUnknown(m)
}

var xxx_messageInfo_Currently proto.InternalMessageInfo

func (m *Currently) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Currently) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Currently) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Forecast struct {
	Summary              string   `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	Days                 []*Day   `protobuf:"bytes,2,rep,name=days,proto3" json:"days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Forecast) Reset()         { *m = Forecast{} }
func (m *Forecast) String() string { return proto.CompactTextString(m) }
func (*Forecast) ProtoMessage()    {}
func (*Forecast) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_f08019a31f90f2e0, []int{3}
}
func (m *Forecast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Forecast.Unmarshal(m, b)
}
func (m *Forecast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Forecast.Marshal(b, m, deterministic)
}
func (dst *Forecast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Forecast.Merge(dst, src)
}
func (m *Forecast) XXX_Size() int {
	return xxx_messageInfo_Forecast.Size(m)
}
func (m *Forecast) XXX_DiscardUnknown() {
	xxx_messageInfo_Forecast.DiscardUnknown(m)
}

var xxx_messageInfo_Forecast proto.InternalMessageInfo

func (m *Forecast) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Forecast) GetDays() []*Day {
	if m != nil {
		return m.Days
	}
	return nil
}

type Day struct {
	Weekday              string   `protobuf:"bytes,1,opt,name=weekday,proto3" json:"weekday,omitempty"`
	Summary              string   `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Data                 *Data    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Day) Reset()         { *m = Day{} }
func (m *Day) String() string { return proto.CompactTextString(m) }
func (*Day) ProtoMessage()    {}
func (*Day) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_f08019a31f90f2e0, []int{4}
}
func (m *Day) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Day.Unmarshal(m, b)
}
func (m *Day) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Day.Marshal(b, m, deterministic)
}
func (dst *Day) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Day.Merge(dst, src)
}
func (m *Day) XXX_Size() int {
	return xxx_messageInfo_Day.Size(m)
}
func (m *Day) XXX_DiscardUnknown() {
	xxx_messageInfo_Day.DiscardUnknown(m)
}

var xxx_messageInfo_Day proto.InternalMessageInfo

func (m *Day) GetWeekday() string {
	if m != nil {
		return m.Weekday
	}
	return ""
}

func (m *Day) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Day) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Data struct {
	DewPoint                 string   `protobuf:"bytes,1,opt,name=dewPoint,proto3" json:"dewPoint,omitempty"`
	FeelsLike                string   `protobuf:"bytes,2,opt,name=feelsLike,proto3" json:"feelsLike,omitempty"`
	Humidity                 string   `protobuf:"bytes,3,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Icon                     string   `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	PrecipitationProbability string   `protobuf:"bytes,5,opt,name=precipitationProbability,proto3" json:"precipitationProbability,omitempty"`
	PrecipitationType        string   `protobuf:"bytes,6,opt,name=precipitationType,proto3" json:"precipitationType,omitempty"`
	Pressure                 string   `protobuf:"bytes,7,opt,name=pressure,proto3" json:"pressure,omitempty"`
	Temperature              string   `protobuf:"bytes,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TemperatureHigh          string   `protobuf:"bytes,9,opt,name=temperatureHigh,proto3" json:"temperatureHigh,omitempty"`
	TemperatureLow           string   `protobuf:"bytes,10,opt,name=temperatureLow,proto3" json:"temperatureLow,omitempty"`
	Timestamp                int64    `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Wind                     string   `protobuf:"bytes,12,opt,name=wind,proto3" json:"wind,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_f08019a31f90f2e0, []int{5}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (dst *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(dst, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetDewPoint() string {
	if m != nil {
		return m.DewPoint
	}
	return ""
}

func (m *Data) GetFeelsLike() string {
	if m != nil {
		return m.FeelsLike
	}
	return ""
}

func (m *Data) GetHumidity() string {
	if m != nil {
		return m.Humidity
	}
	return ""
}

func (m *Data) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Data) GetPrecipitationProbability() string {
	if m != nil {
		return m.PrecipitationProbability
	}
	return ""
}

func (m *Data) GetPrecipitationType() string {
	if m != nil {
		return m.PrecipitationType
	}
	return ""
}

func (m *Data) GetPressure() string {
	if m != nil {
		return m.Pressure
	}
	return ""
}

func (m *Data) GetTemperature() string {
	if m != nil {
		return m.Temperature
	}
	return ""
}

func (m *Data) GetTemperatureHigh() string {
	if m != nil {
		return m.TemperatureHigh
	}
	return ""
}

func (m *Data) GetTemperatureLow() string {
	if m != nil {
		return m.TemperatureLow
	}
	return ""
}

func (m *Data) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Data) GetWind() string {
	if m != nil {
		return m.Wind
	}
	return ""
}

type Alert struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Severity             string   `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alert) Reset()         { *m = Alert{} }
func (m *Alert) String() string { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()    {}
func (*Alert) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_f08019a31f90f2e0, []int{6}
}
func (m *Alert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alert.Unmarshal(m, b)
}
func (m *Alert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alert.Marshal(b, m, deterministic)
}
func (dst *Alert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alert.Merge(dst, src)
}
func (m *Alert) XXX_Size() int {
	return xxx_messageInfo_Alert.Size(m)
}
func (m *Alert) XXX_DiscardUnknown() {
	xxx_messageInfo_Alert.DiscardUnknown(m)
}

var xxx_messageInfo_Alert proto.InternalMessageInfo

func (m *Alert) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Alert) GetSeverity() string {
	if m != nil {
		return m.Severity
	}
	return ""
}

func (m *Alert) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func init() {
	proto.RegisterType((*WeatherRequest)(nil), "weather.WeatherRequest")
	proto.RegisterType((*WeatherReply)(nil), "weather.WeatherReply")
	proto.RegisterType((*Currently)(nil), "weather.Currently")
	proto.RegisterType((*Forecast)(nil), "weather.Forecast")
	proto.RegisterType((*Day)(nil), "weather.Day")
	proto.RegisterType((*Data)(nil), "weather.Data")
	proto.RegisterType((*Alert)(nil), "weather.Alert")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WeatherClient is the client API for Weather service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WeatherClient interface {
	Weather(ctx context.Context, in *WeatherRequest, opts ...grpc.CallOption) (*WeatherReply, error)
}

type weatherClient struct {
	cc *grpc.ClientConn
}

func NewWeatherClient(cc *grpc.ClientConn) WeatherClient {
	return &weatherClient{cc}
}

func (c *weatherClient) Weather(ctx context.Context, in *WeatherRequest, opts ...grpc.CallOption) (*WeatherReply, error) {
	out := new(WeatherReply)
	err := c.cc.Invoke(ctx, "/weather.Weather/Weather", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WeatherServer is the server API for Weather service.
type WeatherServer interface {
	Weather(context.Context, *WeatherRequest) (*WeatherReply, error)
}

func RegisterWeatherServer(s *grpc.Server, srv WeatherServer) {
	s.RegisterService(&_Weather_serviceDesc, srv)
}

func _Weather_Weather_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WeatherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeatherServer).Weather(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/weather.Weather/Weather",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeatherServer).Weather(ctx, req.(*WeatherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Weather_serviceDesc = grpc.ServiceDesc{
	ServiceName: "weather.Weather",
	HandlerType: (*WeatherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Weather",
			Handler:    _Weather_Weather_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "weather.proto",
}

func init() { proto.RegisterFile("weather.proto", fileDescriptor_weather_f08019a31f90f2e0) }

var fileDescriptor_weather_f08019a31f90f2e0 = []byte{
	// 565 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x8f, 0xd3, 0x3c,
	0x10, 0x7e, 0xb3, 0xe9, 0x57, 0xa6, 0xbb, 0x7d, 0x59, 0x0b, 0x84, 0x55, 0x71, 0x08, 0x39, 0xac,
	0x7a, 0x80, 0x15, 0x2a, 0x37, 0x38, 0x21, 0x56, 0x15, 0x87, 0x4a, 0xac, 0x02, 0x82, 0x0b, 0x17,
	0x37, 0x99, 0x6d, 0xcd, 0xe6, 0x0b, 0xdb, 0xa1, 0xca, 0x7f, 0xe1, 0x2f, 0xf2, 0x1f, 0x90, 0x1d,
	0xc7, 0x4d, 0xbb, 0x42, 0xe2, 0x36, 0xcf, 0x3c, 0x33, 0x8f, 0xc7, 0x33, 0x63, 0xc3, 0xc5, 0x1e,
	0x99, 0xda, 0xa1, 0xb8, 0xae, 0x44, 0xa9, 0x4a, 0x32, 0xb6, 0x30, 0xfa, 0x02, 0xb3, 0xaf, 0xad,
	0x19, 0xe3, 0x8f, 0x1a, 0xa5, 0x22, 0x04, 0x06, 0x8a, 0xe7, 0x48, 0xbd, 0xd0, 0x5b, 0xf8, 0xb1,
	0xb1, 0xc9, 0x1c, 0x26, 0x59, 0x99, 0x30, 0xc5, 0xcb, 0x82, 0x9e, 0x85, 0xde, 0x22, 0x88, 0x1d,
	0x26, 0x8f, 0x61, 0x58, 0x17, 0x5c, 0x49, 0xea, 0x1b, 0xa2, 0x05, 0xd1, 0x6f, 0x0f, 0xce, 0x9d,
	0x70, 0x95, 0x35, 0x47, 0x12, 0xde, 0x89, 0xc4, 0x1c, 0x26, 0x6b, 0xa6, 0xb8, 0xaa, 0x53, 0x34,
	0xf2, 0x5e, 0xec, 0x30, 0x79, 0x06, 0xc1, 0xba, 0x2c, 0xb6, 0x2d, 0xe9, 0x1b, 0xf2, 0xe0, 0x20,
	0xaf, 0x20, 0x48, 0x6a, 0x21, 0xb0, 0x50, 0x59, 0x43, 0x07, 0xa1, 0xb7, 0x98, 0x2e, 0xc9, 0x75,
	0x77, 0xd5, 0xf7, 0x1d, 0x13, 0x1f, 0x82, 0xc8, 0x4b, 0x98, 0xdc, 0x95, 0x02, 0x13, 0x26, 0x15,
	0x1d, 0x9a, 0x84, 0x4b, 0x97, 0xb0, 0xb2, 0x44, 0xec, 0x42, 0xc8, 0x15, 0x8c, 0x58, 0x86, 0x42,
	0x49, 0x3a, 0x0a, 0xfd, 0xc5, 0x74, 0x39, 0x73, 0xc1, 0xef, 0xb4, 0x3b, 0xb6, 0x6c, 0xf4, 0x1d,
	0x02, 0x77, 0x1c, 0x09, 0x61, 0x9a, 0xa2, 0x4c, 0x04, 0xaf, 0x7a, 0xd7, 0xed, 0xbb, 0x08, 0x85,
	0xf1, 0xa7, 0x3a, 0xcf, 0x99, 0x68, 0x6c, 0x3f, 0x3b, 0x48, 0x9e, 0xc3, 0x20, 0x65, 0x8a, 0x99,
	0xab, 0x4e, 0x97, 0x17, 0xee, 0xb8, 0x1b, 0xa6, 0x58, 0x6c, 0xa8, 0x68, 0x05, 0x93, 0xae, 0x52,
	0x2d, 0x24, 0xad, 0x50, 0x7b, 0x4c, 0x07, 0x49, 0xa8, 0x85, 0x1a, 0x49, 0xcf, 0x4c, 0xdd, 0xe7,
	0x3d, 0xa1, 0x26, 0x36, 0x4c, 0xf4, 0x0d, 0xfc, 0x1b, 0xd6, 0x68, 0x89, 0x3d, 0xe2, 0x7d, 0xca,
	0x9c, 0x84, 0x85, 0x7d, 0xf1, 0xb3, 0x63, 0xf1, 0x7f, 0xa8, 0xf2, 0x97, 0x0f, 0x03, 0x0d, 0xf5,
	0x74, 0x53, 0xdc, 0xdf, 0x96, 0xbc, 0x50, 0xdd, 0xe4, 0x3b, 0xac, 0xa7, 0x7b, 0x87, 0x98, 0xc9,
	0x35, 0xbf, 0x47, 0x7b, 0xc6, 0xc1, 0xa1, 0x33, 0x77, 0x75, 0xce, 0x53, 0xae, 0x1a, 0xbb, 0x5d,
	0x0e, 0xeb, 0x35, 0xe5, 0x49, 0x59, 0x98, 0xa1, 0x07, 0xb1, 0xb1, 0xc9, 0x1b, 0xa0, 0x95, 0xc0,
	0x84, 0x57, 0x5c, 0x99, 0xc5, 0xba, 0x15, 0xe5, 0x86, 0x6d, 0x78, 0xa6, 0xf3, 0x87, 0x26, 0xee,
	0xaf, 0x3c, 0x79, 0x01, 0x97, 0x47, 0xdc, 0xe7, 0xa6, 0x42, 0x3a, 0x32, 0x49, 0x0f, 0x09, 0x5d,
	0x59, 0x25, 0x50, 0xca, 0x5a, 0x20, 0x1d, 0xb7, 0x95, 0x75, 0x58, 0x4f, 0x5f, 0x61, 0x5e, 0xa1,
	0x60, 0x4a, 0xd3, 0x93, 0x76, 0xfa, 0x3d, 0x17, 0x59, 0xc0, 0xff, 0x3d, 0xf8, 0x81, 0x6f, 0x77,
	0x34, 0x30, 0x51, 0xa7, 0x6e, 0x72, 0x05, 0xb3, 0x9e, 0x6b, 0x5d, 0xee, 0x29, 0x98, 0xc0, 0x13,
	0xaf, 0xee, 0xa3, 0x7e, 0xa8, 0x52, 0xb1, 0xbc, 0xa2, 0x53, 0xf3, 0x72, 0x0f, 0x0e, 0xdd, 0xab,
	0x3d, 0x2f, 0x52, 0x7a, 0xde, 0xf6, 0x4a, 0xdb, 0xd1, 0x47, 0x18, 0x9a, 0x0d, 0xd6, 0x43, 0xce,
	0x51, 0x4a, 0xb6, 0xc5, 0x6e, 0xfc, 0x16, 0xea, 0x4b, 0x4a, 0xfc, 0x89, 0x42, 0xb7, 0xcf, 0xbe,
	0xfa, 0x0e, 0x93, 0x47, 0xe0, 0xd7, 0x82, 0xdb, 0xa9, 0x68, 0x73, 0xb9, 0x82, 0xb1, 0x7d, 0xf0,
	0xe4, 0xed, 0xc1, 0x7c, 0xea, 0x56, 0xe3, 0xf8, 0x9b, 0x99, 0x3f, 0x79, 0x48, 0x54, 0x59, 0x13,
	0xfd, 0xb7, 0x19, 0x99, 0x1f, 0xea, 0xf5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x07, 0xb9, 0x66,
	0xfb, 0xb2, 0x04, 0x00, 0x00,
}
